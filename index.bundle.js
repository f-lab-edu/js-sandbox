(()=>{"use strict";var e="/js-sandbox/";const t=new class{db;constructor(e,t,i){this.dbName=e,this.dbVersion=t,this.stores=i}async openDB(){return new Promise(((e,t)=>{const i=window.indexedDB.open(this.dbName,this.dbVersion);i.onsuccess=()=>{this.db=i.result,this.stores.forEach((e=>{this.db.objectStoreNames.contains(e)&&this.db.deleteObjectStore(e),this.db.createObjectStore(e,{keyPath:"id"})})),e()},i.onerror=e=>{t(e)},i.onupgradeneeded=()=>{this.db=i.result,this.stores.forEach((e=>{this.db.objectStoreNames.contains(e)&&this.db.deleteObjectStore(e),this.db.createObjectStore(e,{keyPath:"id"})}))}}))}async getData(e,t){return new Promise(((i,n)=>{const s=this.db.transaction(e,"readonly").objectStore(e).get(t);s.onsuccess=()=>{i(s.result)},s.onerror=e=>{n(e)}}))}async getAllData(e){return new Promise(((t,i)=>{const n=this.db.transaction(e,"readonly").objectStore(e).getAll();n.onsuccess=()=>{t(n.result)},n.onerror=e=>{i(e)}}))}async upsertData(e,t){return new Promise(((i,n)=>{const s=this.db.transaction(e,"readwrite").objectStore(e),a={...t,id:t.id||(new Date).getTime()},o=s.put(a);o.onsuccess=()=>{i(o.result)},o.onerror=e=>{console.error(e),n(e)}}))}async deleteData(e,t){return new Promise(((i,n)=>{const s=this.db.transaction(e,"readwrite").objectStore(e).delete(t);s.onsuccess=()=>{i(s.result)},s.onerror=e=>{n(e)}}))}}("sandboxDB",2,["notepad"]),i=(e,...t)=>String.raw(e,...t);class n extends HTMLElement{connectedCallback(){this.render()}render(){this.innerHTML=this.injectHTML()}injectHTML(){return""}}class s extends n{injectHTML(){return i`
      <div id="page"></div>
      <my-icons tabindex="-1"></my-icons>
      <my-footer></my-footer>
    `}}const a=e+"2a583f97b153f7da7d41.png",o=[{path:"/",html:i`<my-home></my-home>`,label:"Home",iconSrc:null,tag:"my-home"},{path:"/tetris",html:i`<my-tetris></my-tetris>`,label:"Tetris",iconSrc:e+"71c0bea6462001116fcf.png",tag:"my-tetris"},{path:"/flappybird",html:i`<my-flappybird></my-flappybird>`,label:"Flappy&nbsp;Bird",iconSrc:e+"39b884119b49599495ed.png",tag:"my-flappybird"},{path:"/notepad",html:i`<my-notepad></my-notepad>`,label:"Note&nbsp;Pad",iconSrc:a,tag:"my-notepad"},{path:"/notepad/:id",html:i`<my-notepad></my-notepad>`,label:"Note&nbsp;Pad",iconSrc:null,tag:"my-notepad"}],c=o.reduce(((e,t)=>{const{path:i,label:n,iconSrc:s}=t;return t.iconSrc?[...e,{path:i,label:n,iconSrc:s}]:e}),[]),l=async()=>[...(await t.getAllData("notepad")).reduce(((e,t)=>{const{id:i,title:n}=t;return[...e,{path:`/notepad/${i}`,label:n,iconSrc:a}]}),[])],r=o,d="/js-sandbox",h=new class{constructor(e){this.routes=e}pathToRegexp(e){return new RegExp(`^${e.replace(/\//g,"\\/").replace(/:\w+/g,"(.+)")}$`)}render(){const e=this.routes.find((e=>null!==window.location.pathname.replace(d,"").match(this.pathToRegexp(e.path))));if(e){if(e.path.includes("/:id")){const t=window.location.pathname.replace(d,"").match(/\d+/)[0];e.html=e.html.replace(`${e.tag}`,`${e.tag} id="${t}"`)}document.querySelector("#page").innerHTML=e.html}else this.replaceTo("/")}navigateTo(e){window.history.pushState(null,null,d+e),this.render()}replaceTo(e){window.history.replaceState(null,null,d+e),this.render()}back(){window.history.back(),this.render()}}(r),p=e+"59cb65e4f8f2627d6c2c.png",b=e+"bc8d31a2338dd0b3f68a.png";class u extends n{connectedCallback(){super.connectedCallback(),this.addEventListener("click",this.handleClick.bind(this))}injectHTML(){return i`
      <img alt="window_logo" src=${p} class="window_icon" />
      <div class="input_box">
        <img alt="search" src=${b} class="window_icon" /><input type="text" placeholder="찾기" />
      </div>
      ${c.map((e=>i` <my-icon data-path="${e.path}" data-iconSrc="${e.iconSrc}"></my-icon> `)).join("")}
    `}handleClick(e){if(!e.target.closest("my-icon"))return;const t=e.target.closest("my-icon");h.navigateTo(t.dataset.path)}}class m extends n{}class y extends n{injectHTML(){return i`
      <h1>Tetris</h1>
      <p>You are viewing the Tetris component!</p>
    `}}class g extends n{injectHTML(){return i`
      <h1>Flappy Bird</h1>
      <p>You are viewing the Flappy Bird component!</p>
      <p>You are viewing the Flappy Bird component!</p>
      <p>You are viewing the Flappy Bird component!</p>
      <p>You are viewing the Flappy Bird component!</p>
      <p>You are viewing the Flappy Bird component!</p>
      <p>You are viewing the Flappy Bird component!</p>
    `}}class k extends n{async connectedCallback(){this.icons=[...c,...await l()],super.connectedCallback(),this.addEventListener("click",this.handleClick),this.addEventListener("dblclick",this.handleDoubleClick),this.addEventListener("keydown",this.handleKeyDown),this.addEventListener("iconChange",this.handleIconChange)}static get observedAttributes(){return["icons"]}attributeChangedCallback(e,t,i){t!==i&&this.render()}injectHTML(){return i`
      ${this.icons.map((e=>i`
            <my-icon data-path=${e.path} data-label=${e.label} data-iconSrc=${e.iconSrc}></my-icon>
          `)).join("")}
    `}get icons(){return JSON.parse(this.getAttribute("icons"))}set icons(e){this.setAttribute("icons",JSON.stringify(e))}handleClick(e){if(!e.target.closest("my-icon"))return;const t=e.target.closest("my-icon");t.toggleAttribute("checked"),this.querySelectorAll("my-icon").forEach((e=>{e!==t&&e.removeAttribute("checked")}))}handleDoubleClick(e){if(!e.target.closest("my-icon"))return;const t=e.target.closest("my-icon");h.navigateTo(t.dataset.path)}handleKeyDown(e){const t=this.querySelectorAll("my-icon[checked]");if("Enter"===e.key){if(t.length>1)return;if(!t)return;h.navigateTo(t[0].dataset.path)}}handleIconChange(e){const{path:t,label:i,iconSrc:n}=e.detail,s=this.icons.findIndex((e=>e.path===t));if(-1===s)this.icons=[...this.icons,{path:t,label:i,iconSrc:n}];else{const e=[...this.icons];e[s]={path:t,label:i,iconSrc:n},this.icons=e}}}class v extends n{injectHTML(){const{label:e,iconsrc:t}=this.dataset;return i`
      <img alt="${e}_icon" src=${t} />
      ${e?`<span class="icon_name">${e}</span>`:""}
    `}}class w extends n{async connectedCallback(){this.data=await t.getData("notepad",this.id)??{title:"제목없음",content:""},super.connectedCallback(),this.addEventListener("save",this.handleSave),this.addEventListener("localSave",this.handleLocalSave)}disconnectedCallback(){this.removeEventListener("save",this.handleSave),this.removeEventListener("localSave",this.handleLocalSave)}injectHTML(){const{title:e,content:t}=this.data;return i`
      <my-notepad-header title=${e}></my-notepad-header>
      <textarea>${t}</textarea>
    `}handleLocalSave(e){e.preventDefault();const t=this.getNotePadData();if(!t)return;const i=new Blob([t.content],{type:"text/plain"}),n=document.createElement("a");n.href=URL.createObjectURL(i),n.download=`${t.title}.txt`,n.click()}async handleSave(e){try{e.stopPropagation();const i=this.getNotePadData();if(!i)return;const n=await t.upsertData("notepad",i);if(!n)return;const s=`/notepad/${n}`;alert("저장되었습니다.");const o=new CustomEvent("iconChange",{detail:{path:s,label:i.title.replace(/ /g,"&nbsp;"),iconSrc:a}});document.querySelector("my-icons").dispatchEvent(o),h.navigateTo(s)}catch(e){alert("저장에 실패했습니다.")}}getNotePadData(){const e=this.querySelector("textarea").value.trim();if(!e)return alert("내용이 없습니다."),null;let t;for(;!t;)if(!(t=prompt("파일명을 입력하세요.",this.data.title.replace(/&nbsp;/g," ")),t||window.confirm("제목은 필수입니다.")))return null;return{id:this.id,title:t.trim().replace(/ /g,"&nbsp;"),content:e.replace(/ /g,"&nbsp;").replace(/\n/g,"<br>").replace(/\t/g,"&nbsp;&nbsp;&nbsp;&nbsp;")}}get id(){return Number(this.getAttribute("id"))}}const f=[{id:"file",title:"파일",key:"F",slots:[{id:1,text:"새로 만들기(N)",key:["Ctrl","N"],disable:!0},{id:2,text:"내 컴퓨터에 저장(W)",key:["Ctrl","Shift","N"],onClick:function(){this.dispatchEvent(new CustomEvent("localSave",{bubbles:!0}))}},{id:3,text:"저장(S)",key:["Ctrl","S"],onClick:function(){this.dispatchEvent(new CustomEvent("save",{bubbles:!0}))}},{id:4,text:"삭제(D)",key:["Ctrl","Shift","S"],disable:!0},{id:5,text:"페이지 설정(U)...",key:[],disable:!0},{id:6,text:"인쇄(P)...",key:["Ctrl","P"],disable:!0},{id:7,text:"끝내기(X)",key:[],disable:!0}]},{id:"edit",title:"편집",key:"E",slots:[{id:8,text:"실행 취소(U)",key:["Ctrl","Z"],disable:!0},{id:9,text:"잘라내기(T)",key:["Ctrl","X"],disable:!0},{id:10,text:"복사(C)",key:["Ctrl","C"],disable:!0},{id:11,text:"붙여넣기(P)",key:["Ctrl","V"],disable:!0},{id:12,text:"삭제(D)",key:["Del"],disable:!0},{id:13,text:"Bing으로 검색(S)...",key:["Ctrl","E"],disable:!0},{id:14,text:"찾기(F)...",key:["Ctrl","F"],disable:!0},{id:15,text:"다음 찾기(N)",key:["F3"],disable:!0},{id:16,text:"이전 찾기(V)",key:["Shift","F3"],disable:!0},{id:17,text:"바꾸기(R)...",key:["Ctrl","H"],disable:!0},{id:18,text:"이동(G)...",key:["Ctrl","G"],disable:!0},{id:19,text:"모두 선택(A)",key:["Ctrl","A"],disable:!0},{id:20,text:"시간/날짜(D)",key:["F5"],disable:!0}]},{id:"format",title:"서식",key:"O",slots:[{id:21,text:"자동 줄 바꿈(W)",key:[],disable:!0},{id:22,text:"글꼴(F)...",key:[],disable:!0}]},{id:"view",title:"보기",key:"V",slots:[{id:23,text:"확대하기(Z)",key:["Ctrl","+"],disable:!0},{id:24,text:"축소하기(X)",key:["Ctrl","-"],disable:!0},{id:25,text:"상태 표시줄(S)",key:[],disable:!0}]},{id:"help",title:"도움말",key:"H",slots:[{id:26,text:"도움말 보기(H)",key:[],disable:!0},{id:27,text:"피드백 보내기(F)",key:[],disable:!0},{id:28,text:"메모장 정보(A)",key:[],disable:!0}]}],S=f.reduce(((e,t)=>[...e,...t.slots]),[]),x=f;class C extends n{connectedCallback(){super.connectedCallback(),this.addEventListener("click",this.handleClick)}disconnectedCallback(){this.removeEventListener("click",this.handleClick)}injectHTML(){return i`
      <header>
        <span>
          <img alt="notepad_icon" src=${a} />
          ${this.title} - Windows 메모장
        </span>
        <div class="view_buttons">
          <button class="view_button" id="mini">🗕</button>
          <button class="view_button" id="full">🗖</button>
          <button class="view_button" id="close">Ⅹ</button>
        </div>
      </header>
      <div class="edit_buttons">
        ${x.map((e=>i`
              <button class="edit_button">
                ${e.title}(<u>${e.key}</u>)
                <div class="popup">
                  ${e.slots.map((e=>i`
                        <div class="sub" data-id="${e.id}" data-disable="${!!e.disable}">
                          <div>${e.text}</div>
                          ${e.key.length>0?`<div>${e.key.join(" + ")}</div>`:""}
                        </div>
                      `)).join("")}
                </div>
              </button>
            `)).join("")}
      </div>
    `}handleClick(e){const t=e.target.closest(".view_button"),i=e.target.closest(".edit_button"),n=e.target.closest(".sub");t?this.clickViewButton(t):i?this.clickEditButton(i,n):this.closePopup()}clickViewButton(e){switch(e.id){case"full":this.parentElement.classList.toggle("fullscreen");break;case"mini":case"close":h.back()}}clickEditButton(e,t){if(this.closePopup(),t){const e=Number(t.dataset.id),{onClick:i}=S.find((t=>t.id===e))||{};i&&i.call(this)}else e.querySelector(".popup").classList.toggle("show")}closePopup(){const e=this.querySelector(".popup.show");e&&e.classList.remove("show")}get title(){return this.getAttribute("title")}}(async()=>{await t.openDB(),customElements.define("my-app",s),customElements.define("my-footer",u),customElements.define("my-home",m),customElements.define("my-tetris",y),customElements.define("my-flappybird",g),customElements.define("my-icons",k),customElements.define("my-icon",v),customElements.define("my-notepad",w),customElements.define("my-notepad-header",C)})(),window.addEventListener("load",(()=>h.render())),window.addEventListener("popstate",(()=>h.render()))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,